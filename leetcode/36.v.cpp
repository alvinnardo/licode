#include "../template/head.h"
#include <bits/stdc++.h>

bool isValidSudoku(vector<vector<char>> &&board) {
    // 思路：位运算
    // 时间 O(n2)，空间 O(n)
    int n = board.size();

    // 横竖
    vector<int> col(n);
    for (int i = 0; i < n; i++) {
        int row{};
        for (int j = 0; j < n; j++) {
            if (board[i][j] == '.') {
                continue;
            }
            int t = (1 << (board[i][j] - '0'));
            if (row & t || col[j] & t) {
                return false;
            }

            row |= t;
            col[j] |= t;
        }
    }

    // 正方形
    vector<vector<int>> mid_vec{{1, 1}, {1, 4}, {1, 7}, {4, 1}, {4, 4},
                                {4, 7}, {7, 1}, {7, 4}, {7, 7}};
    vector<vector<int>> step{{-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0},
                             {0, 1},   {1, -1}, {1, 0},  {1, 1}};
    for (auto &v : mid_vec) {
        int cir{};
        for (auto &s : step) {
            char c = board[v[0] + s[0]][v[1] + s[1]];
            if (c == '.') {
                continue;
            }
            int t = (1 << (c - '0'));
            if (cir & t) {
                return false;
            }
            cir |= t;
        }
    }

    return true;
}

int main(int argc, char *argv[]) {
    // true
    cout << isValidSudoku({{'5', '3', '.', '.', '7', '.', '.', '.', '.'},
                           {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
                           {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
                           {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
                           {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
                           {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
                           {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
                           {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
                           {'.', '.', '.', '.', '8', '.', '.', '7', '9'}})
         << endl;
    // false
    cout << isValidSudoku({{'8', '3', '.', '.', '7', '.', '.', '.', '.'},
                           {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
                           {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
                           {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
                           {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
                           {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
                           {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
                           {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
                           {'.', '.', '.', '.', '8', '.', '.', '7', '9'}})
         << endl;

    return 0;
}
